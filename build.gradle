plugins {
    id 'com.github.johnrengelman.shadow' version '7.1.2'
    id 'java'
}

group = 'me.clip.noflyzone'
version = '3.0.0'

repositories {
    mavenCentral()
    maven {
        name = 'papermc-repo'
        url = 'https://repo.papermc.io/repository/maven-public/'
    }
    maven {
        name = 'sonatype'
        url = 'https://oss.sonatype.org/content/groups/public/'
    }
    maven {
        name = 'EngineHub'
        url = 'https://maven.enginehub.org/repo/'
    }
    maven {
        name = 'aikar'
        url = 'https://repo.aikar.co/content/groups/aikar/'
    }
    maven {
        name = 'codemc'
        url = 'https://repo.codemc.org/repository/maven-public/'
    }
    maven {
        name = 'jitpack'
        url = 'https://jitpack.io'
    }
}

dependencies {
    compileOnly 'io.papermc.paper:paper-api:1.19.2-R0.1-SNAPSHOT'

    compileOnly 'org.spongepowered:configurate-yaml:4.1.2'
    compileOnly 'com.sk89q.worldedit:worldedit-core:7.3.0-SNAPSHOT'
    compileOnly 'com.sk89q.worldedit:worldedit-bukkit:7.3.0-SNAPSHOT'
    compileOnly 'com.sk89q.worldguard:worldguard-core:7.1.0-SNAPSHOT'
    compileOnly 'com.sk89q.worldguard:worldguard-bukkit:7.1.0-SNAPSHOT'

    implementation 'com.github.sarhatabaot:KrakenCore:1.6.3'
    implementation 'co.aikar:acf-paper:0.5.1-SNAPSHOT'
    implementation 'org.bstats:bstats-bukkit:3.0.0'

    testImplementation 'org.junit.jupiter:junit-jupiter:5.9.2'
}

def targetJavaVersion = 17
java {
    def javaVersion = JavaVersion.toVersion(targetJavaVersion)
    sourceCompatibility = javaVersion
    targetCompatibility = javaVersion
    if (JavaVersion.current() < javaVersion) {
        toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
    }
}

tasks.withType(JavaCompile).configureEach {
    if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
        options.release = targetJavaVersion
    }
}


processResources {
    def props = [
            "version"               : version
    ]

    inputs.properties props
    filteringCharset 'UTF-8'

    filesMatching('plugin.yml') {
        expand(props) {
            escapeBackslash = true
        }
    }

}

shadowJar {
    archiveClassifier.set('')

    relocate 'org.bstats', 'me.clip.noflyzone.metrics'
    relocate 'co.aikar.commands', 'me.clip.noflyzone.acf'
    relocate 'co.aikar.locales', 'me.clip.noflyzone.locales'
}